
package hangaroo_game;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Random;
import java.util.Scanner;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;

/**
 *
 * @author BhanukaBandara
 */
public class MainInterface extends javax.swing.JFrame {

    static int incorrectCounterOfTheGame = 0; //setting incorrect counter to 0
    static int positionOfTheLetter = 0; //setting position to 0
    static String wordsInTheGame = ""; //setting words to ""
    
    /**
     * Creates new form MainInterface
     */
    public MainInterface() {
        initComponents();
        getContentPane().setBackground(Color.ORANGE); //changing the bgcolor of the JFrame
        setLocationRelativeTo(null); //will help to open the jframe in the center of the screen
        txtLetter.requestFocusInWindow(); //setting cursor to the txtLetter at the start
        setDefaultSettings(); //reset hangaroo_game
        System.out.println(wordsInTheGame); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tryLetterPanel = new javax.swing.JPanel();
        labelMessage = new javax.swing.JLabel();
        buttonTryLetter = new javax.swing.JButton();
        labelIncorrectCount = new javax.swing.JLabel();
        txtLetter = new javax.swing.JTextField();
        buttonImage = new javax.swing.JButton();
        wordsPanel = new javax.swing.JPanel();
        labelChar1 = new javax.swing.JLabel();
        labelChar3 = new javax.swing.JLabel();
        labelChar2 = new javax.swing.JLabel();
        labelChar4 = new javax.swing.JLabel();
        labelChar5 = new javax.swing.JLabel();
        labelChar6 = new javax.swing.JLabel();
        labelChar7 = new javax.swing.JLabel();
        labelChar8 = new javax.swing.JLabel();
        labelChar9 = new javax.swing.JLabel();
        labelChar10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tryLetterPanel.setBackground(new java.awt.Color(255, 255, 255));
        tryLetterPanel.setForeground(new java.awt.Color(255, 255, 255));

        labelMessage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 30)); // NOI18N
        labelMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMessage.setText("!! Welcome to Hangaroo !!");

        buttonTryLetter.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 35)); // NOI18N
        buttonTryLetter.setText("Try Letter");
        buttonTryLetter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTryLetterActionPerformed(evt);
            }
        });

        labelIncorrectCount.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 45)); // NOI18N
        labelIncorrectCount.setForeground(new java.awt.Color(255, 0, 0));
        labelIncorrectCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelIncorrectCount.setText("0");

        txtLetter.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 45)); // NOI18N
        txtLetter.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout tryLetterPanelLayout = new javax.swing.GroupLayout(tryLetterPanel);
        tryLetterPanel.setLayout(tryLetterPanelLayout);
        tryLetterPanelLayout.setHorizontalGroup(
            tryLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tryLetterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(tryLetterPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(labelIncorrectCount, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(268, 268, 268))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tryLetterPanelLayout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(buttonTryLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        tryLetterPanelLayout.setVerticalGroup(
            tryLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tryLetterPanelLayout.createSequentialGroup()
                .addGroup(tryLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tryLetterPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(labelIncorrectCount, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tryLetterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonTryLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addComponent(labelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        getContentPane().add(tryLetterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 160, 550, 370));

        buttonImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangaroo_game/imgstart.jpg"))); // NOI18N
        buttonImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImageActionPerformed(evt);
            }
        });
        getContentPane().add(buttonImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 260, 520));

        wordsPanel.setBackground(new java.awt.Color(255, 255, 255));
        wordsPanel.setForeground(new java.awt.Color(255, 255, 255));

        labelChar1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar9.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelChar10.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        labelChar10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout wordsPanelLayout = new javax.swing.GroupLayout(wordsPanel);
        wordsPanel.setLayout(wordsPanelLayout);
        wordsPanelLayout.setHorizontalGroup(
            wordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wordsPanelLayout.createSequentialGroup()
                .addComponent(labelChar1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelChar8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(labelChar9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelChar10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        wordsPanelLayout.setVerticalGroup(
            wordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wordsPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(wordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelChar9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(wordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelChar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelChar2, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(labelChar3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelChar4, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(labelChar5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelChar6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelChar7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelChar8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelChar10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        getContentPane().add(wordsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 490, 100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTryLetterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTryLetterActionPerformed
        try {
            checkCorrectLetterInTheGame();//Check correct guess
            int winLevel = checkWinStatusInTheGame();//Check whether the word is complete
            if (winLevel == 1) {
                gameOver(1);
                setDefaultSettings();
            }
            checkIncorrectLetterInTheGame();//Check incorrect guess

        } catch (Exception e) {
            //Ignore if any exception is thrown
        }
    }//GEN-LAST:event_buttonTryLetterActionPerformed

    private void buttonImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonImageActionPerformed

   
    public void mainmain() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { // this method will help to perform a action in the program
                new MainInterface().setVisible(true); // maininterface window will be 
            }
        });
    }
    
    //get icons to the hangaroo game
    public static Icon getIcon(int select){ 
        
        Icon first = new ImageIcon ("img1.jpg"); 
        Icon second = new ImageIcon ("img2.jpg");
        Icon three = new ImageIcon ("img3.jpg");
        Icon defaultIcon = new ImageIcon ("imgstart.jpg");
        
        if (select == 1){
            return first;
            
        }else if (select == 2){
            return second;
            
        }else if (select == 3){
            return three;
            
        }else {
            return defaultIcon;
    }
        
  }            
    
    // checking whethere the word is right or wrong 
  public void checkCorrectLetterInTheGame() {
        try {
            char guess = txtLetter.getText().toLowerCase().charAt(0);//Get user's input to guess and convert it to a lower case and store it in the char varibale name called guess and store that letter in the index of 0 

            //Repeatedly check for a correct letter match
            for (int i = 0; i < wordsInTheGame.length(); i++) { 
                if (guess == wordsInTheGame.charAt(i)) { 
                    positionOfTheLetter = i + 1;//Calculate suitable label position
                    String character = Character.toString(guess);

                    //Check the suitable label position
                    if (positionOfTheLetter == 1 && !labelChar1.getText().equals(character)) {
                        labelChar1.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 2 && !labelChar2.getText().equals(character)) {
                        labelChar2.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 3 && !labelChar3.getText().equals(character)) {
                        labelChar3.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 4 && !labelChar4.getText().equals(character)) {
                        labelChar4.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 5 && !labelChar5.getText().equals(character)) {
                        labelChar5.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 6 && !labelChar6.getText().equals(character)) {
                        labelChar6.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 7 && !labelChar7.getText().equals(character)) {
                        labelChar7.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 8 && !labelChar8.getText().equals(character)) {
                        labelChar8.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 9 && !labelChar9.getText().equals(character)) {
                        labelChar9.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else if (positionOfTheLetter == 10 && !labelChar10.getText().equals(character)) {
                        labelChar10.setText(character);
                        displayGuessResultInTheGame(1);//Display result of the guess
                        break;
                    } else {//if user try to re-guess a character which is already guessed
                        txtLetter.setText("");
                        txtLetter.requestFocusInWindow();//Set curor to txtLetter
                    }
                }
    }
        } catch (StringIndexOutOfBoundsException e) {
            //Display error message for null input
            JOptionPane.showMessageDialog(null, "PLEASE INPUT A VALID CHARACTER", "INVALID INPUT", ERROR_MESSAGE);
            txtLetter.requestFocusInWindow();//Set cursor to txtLetter
  }
  }
  //check user won the game or not 
    public int checkWinStatusInTheGame() {
        String checkWord = labelChar1.getText() + labelChar2.getText() + labelChar3.getText() + labelChar4.getText() + labelChar5.getText() 
                + labelChar6.getText() + labelChar7.getText() + labelChar8.getText() + labelChar9.getText() + labelChar10.getText();
        if (checkWord.equals(wordsInTheGame)){ // create a string variable name called checkword and assigning the previous guesses to that string check whether if it's equals to word in that txt file 
                return 1; //return first 
        } else {
                return 2; //return second
        }
            
    }
//display a dialog message to the user if the game is over or failed to win the game
    public void gameOver(int select) {
        if (select == 1){ //if the select equls 1 display following message 
        JOptionPane.showMessageDialog(null,"!!CONGRATUALTIONS YOU WON. GAME OVER!!","GAME OVER",INFORMATION_MESSAGE);
        }
        if (select == 2){ //if the select equals 2 display follwing message
        JOptionPane.showMessageDialog(null,"!!YOU FAILED TO WIN. GAME OVER!!","GAME OVER",INFORMATION_MESSAGE);
        }
    }
 //set game to the default 
    public void setDefaultSettings() {
       
        wordsInTheGame = getRandomWord(); // getting words randomly
        txtLetter.setText(Character.toString(wordsInTheGame.charAt(1)));
        Icon defaultIcon = getIcon(0);//set hangaroo image to default
        incorrectCounterOfTheGame = 0;//set incorrect counter to 0
        
        // setting right label to letter
        labelChar1.setText("X");
        labelChar2.setText("X");
        labelChar3.setText("X");
        labelChar4.setText("");
        labelChar5.setText("");
        labelChar6.setText("");
        labelChar7.setText("");
        labelChar8.setText("");
        labelChar9.setText("");
        labelChar10.setText("");
        // check the length of the word and display right amount of labels in the game 
        if(wordsInTheGame.length() == 4){
                labelChar4.setText("X");
                
        } if(wordsInTheGame.length() == 5){
                labelChar4.setText("X");
                labelChar5.setText("X");
                
        }if(wordsInTheGame.length() == 6){
                labelChar4.setText("X");
                labelChar5.setText("X");
                labelChar6.setText("X");
        
        }if(wordsInTheGame.length() == 7){
                labelChar4.setText("X");
                labelChar5.setText("X");
                labelChar6.setText("X");
                labelChar7.setText("X");
        }if(wordsInTheGame.length() == 8){
                labelChar4.setText("X");
                labelChar5.setText("X");
                labelChar6.setText("X");
                labelChar7.setText("X");
                labelChar8.setText("X");
        }if(wordsInTheGame.length() == 9){
                labelChar4.setText("X");
                labelChar5.setText("X");
                labelChar6.setText("X");
                labelChar7.setText("X");
                labelChar8.setText("X");
                labelChar9.setText("X");
        }if(wordsInTheGame.length() == 10){
                labelChar4.setText("X");
                labelChar5.setText("X");
                labelChar6.setText("X");
                labelChar7.setText("X");
                labelChar8.setText("X");
                labelChar9.setText("X");
                labelChar10.setText("X");
        
    }
        labelMessage.setText("!!WELCOME TO HANGAROO GAME!!"); //displaying the welcome message in the game
        buttonImage.setIcon(defaultIcon); //set defaulticon to the button image
        labelIncorrectCount.setText(Integer.toString(incorrectCounterOfTheGame)); //display incorrect counter
        txtLetter.requestFocusInWindow(); //set cursor to the txtletter window
    }
    //check if user enter a incorrect letter while playing in the game 
    public void checkIncorrectLetterInTheGame() {
        int count = 0;//create a int type variable name count assign 0 to it
        char guess = txtLetter.getText().toLowerCase().charAt(0);//Get user's input
        char[] characters = new char[wordsInTheGame.length()];//Create characters array and assign the length of the string variable name called wordsInTheGame

        //Split characters of the word
        for (int i = 0; i < wordsInTheGame.length(); i++) { //check whether the legnth of the word is greater than i 
            characters[i] = wordsInTheGame.toLowerCase().charAt(i); // then equals the index of that characters array to that word
        }

        //Repeatedly check for incorrect character match
        for (char character : characters) {
            if (character != guess) {
                count++;
            }
    }
        //Increase incorrectCount if true
        if (count == wordsInTheGame.length()) {
            incorrectCounterOfTheGame ++;
            displayGuessResultInTheGame(2);
        }

        //Get icons of Hangman
        Icon part1 = getIcon(1);
        Icon part2 = getIcon(2);
        Icon part3 = getIcon(3);

        //Display parts of hangman image
        switch (incorrectCounterOfTheGame) {
            case 1:
                buttonImage.setIcon(part1);
                break;
            case 2:
                buttonImage.setIcon(part2);
                break;
            case 3:
                buttonImage.setIcon(part3);
                break;
        }

        //Check whether the incorrectCount is >= 3
        if (incorrectCounterOfTheGame >= 3) {
            gameOver(2);//Display Game Over Message
            setDefaultSettings(); //Reset Hangman game
        }
    
    } 
   //get random method 
     public static String getRandomWord() {
        String[] wordList = new String[6];
        String randomWord = "";
        Random rd = new Random();//Create a random object called rd
        int randomNumber = rd.nextInt(5 + 1 - 0) + 0;//Generate a random number 
//this is called exception handling when the program is running it will search for a file name called wordsOfTheGame and if its not there then the program will stop
        try {
            //Read from words.txt
            Scanner sc = new Scanner(new File("wordsOfTheGame.txt"));

            //Repeatedly get random word from words.txt to wordList[]
            for (int i = 0; i <= 5; i++) {
                wordList[i] = sc.nextLine();
            }
            //Repeatedly get random word from wordList[]
            for (int i = 0; i <= randomNumber; i++) {
                randomWord = wordList[i];
            }
        } catch (FileNotFoundException ex) {
        }

        return randomWord;//returning the randoWord String variable 
    }

   
 // display guess result in the game when user input guesses 
    public void displayGuessResultInTheGame(int select) {
        if (select == 1) {
            labelMessage.setText("CORRECT GUESS!!");
            txtLetter.setText(null);
        } else if (select == 2) {
            labelIncorrectCount.setText(Integer.toString(incorrectCounterOfTheGame));
            labelMessage.setText("INCORRECT GUESS!! TRY AGAIN");
            txtLetter.setText(null);
        }
        txtLetter.requestFocusInWindow();//Set cursor to txtLetter at the start
    }

  


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonImage;
    private javax.swing.JButton buttonTryLetter;
    private javax.swing.JLabel labelChar1;
    private javax.swing.JLabel labelChar10;
    private javax.swing.JLabel labelChar2;
    private javax.swing.JLabel labelChar3;
    private javax.swing.JLabel labelChar4;
    private javax.swing.JLabel labelChar5;
    private javax.swing.JLabel labelChar6;
    private javax.swing.JLabel labelChar7;
    private javax.swing.JLabel labelChar8;
    private javax.swing.JLabel labelChar9;
    private javax.swing.JLabel labelIncorrectCount;
    private javax.swing.JLabel labelMessage;
    private javax.swing.JPanel tryLetterPanel;
    private javax.swing.JTextField txtLetter;
    private javax.swing.JPanel wordsPanel;
    // End of variables declaration//GEN-END:variables

}